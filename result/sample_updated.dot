digraph G {
color=black;
orientation=portrait;
fontsize=20;
compound=true;
size="30,40";
ratio=compress;
subgraph "cluster_main" {
label="main";
Node_0_13 [shape=diamond, fontsize=22, label="!(argc == 2)?"];
Node_0_13 -> Node_0_20 [fontsize=20, label="true"];
Node_0_20 [shape=diamond, fontsize=22, label="!(argc == 4)?"];
Node_0_58 [shape=Mrecord, fontsize=22, label="End of Function"];
Node_0_37 [shape=diamond, fontsize=22, label="!(num1 \< num2)?"];
Node_0_37 -> Node_0_40 [fontsize=20, label="true"];
Node_0_40 [shape=Mrecord, fontsize=22, label="printf(\"Both numbers are equal.\\n\");"];
Node_0_40 -> Node_0_41;
Node_0_41 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_46 [shape=diamond, fontsize=22, label="!(num3 \< 0)?"];
Node_0_46 -> Node_0_49 [fontsize=20, label="true"];
Node_0_49 [shape=Mrecord, fontsize=22, label="printf(\"%d is zero.\\n\", num3);"];
Node_0_49 -> Node_0_50;
Node_0_50 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_0_Node_0_1_Node_0_2_Node_0_3_Node_0_4_Node_0_5 [label="printf(\Program name: %s\\n\, argv[(signed long int)0]);\nFILE *fptr;\nsigned int num1;\nsigned int num2;\nsigned int num3;\n!(argc \< 2)?", shape=Mrecord, fontsize=22, color=red];
Node_0_0_Node_0_1_Node_0_2_Node_0_3_Node_0_4_Node_0_5 -> Node_0_13;
Node_0_21_Node_0_22_Node_0_23_Node_0_24_Node_0_32 [label="num1=atoi(argv[(signed long int)1]);\nnum2=atoi(argv[(signed long int)2]);\nnum3=atoi(argv[(signed long int)3]);\nGoto\nSkip", shape=Mrecord, fontsize=22, color=red];
Node_0_20 -> Node_0_21_Node_0_22_Node_0_23_Node_0_24_Node_0_32;
Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19 [label="printf(\Number of arguments: %d\\nRead From File\\n\, argc - 1);\nfptr=fopen(argv[(signed long int)1], \r\);\n__isoc99_fscanf(fptr, \%d\, &num1);\n__isoc99_fscanf(fptr, \%d\, &num2);\n__isoc99_fscanf(fptr, \%d\, &num3);\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_13 -> Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19;
Node_0_6_Node_0_7_Node_0_8_Node_0_9_Node_0_10_Node_0_11_Node_0_12 [label="printf(\Usage: %s .not input\\n\, argv[(signed long int)0]);\nreturn 1;\nDead\nDead\nDead\nDead\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_6_Node_0_7_Node_0_8_Node_0_9_Node_0_10_Node_0_11_Node_0_12 -> Node_0_58;
Node_0_0_Node_0_1_Node_0_2_Node_0_3_Node_0_4_Node_0_5 -> Node_0_6_Node_0_7_Node_0_8_Node_0_9_Node_0_10_Node_0_11_Node_0_12;
Node_0_25_Node_0_26_Node_0_27_Node_0_28_Node_0_29_Node_0_30_Node_0_31 [label="printf(\Invalid number of arguments. Please provide three numbers.\\n\);\nreturn 1;\nDead\nDead\nDead\nDead\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_25_Node_0_26_Node_0_27_Node_0_28_Node_0_29_Node_0_30_Node_0_31 -> Node_0_58;
Node_0_20 -> Node_0_25_Node_0_26_Node_0_27_Node_0_28_Node_0_29_Node_0_30_Node_0_31;
Node_0_33_Node_0_34 [label="Skip\n!(num1 \> num2)?", shape=Mrecord, fontsize=22, color=red];
Node_0_33_Node_0_34 -> Node_0_37;
Node_0_21_Node_0_22_Node_0_23_Node_0_24_Node_0_32 -> Node_0_33_Node_0_34;
Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19 -> Node_0_33_Node_0_34;
Node_0_35_Node_0_36 [label="printf(\num1 = %d is greater than num2 = %d.\\n\, num1, num2);\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_33_Node_0_34 -> Node_0_35_Node_0_36;
Node_0_38_Node_0_39 [label="printf(\num1 = %d is less than num2 = %d.\\n\, num1, num2);\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_38_Node_0_39 -> Node_0_41;
Node_0_37 -> Node_0_38_Node_0_39;
Node_0_42_Node_0_43 [label="Skip\n!(num3 \> 0)?", shape=Mrecord, fontsize=22, color=red];
Node_0_42_Node_0_43 -> Node_0_46;
Node_0_41 -> Node_0_42_Node_0_43;
Node_0_35_Node_0_36 -> Node_0_42_Node_0_43;
Node_0_44_Node_0_45 [label="printf(\%d is positive.\\n\, num3);\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_42_Node_0_43 -> Node_0_44_Node_0_45;
Node_0_47_Node_0_48 [label="printf(\%d is negative.\\n\, num3);\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_47_Node_0_48 -> Node_0_50;
Node_0_46 -> Node_0_47_Node_0_48;
Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57 [label="Skip\nreturn 0;\nDead\nDead\nDead\nDead\nGoto", shape=Mrecord, fontsize=22, color=red];
Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57 -> Node_0_58;
Node_0_50 -> Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57;
Node_0_44_Node_0_45 -> Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57;
}

subgraph "cluster___CPROVER__start" {
label="__CPROVER__start";
Node_1_59_Node_1_60_Node_1_61_Node_1_62_Node_1_63_Node_1_64_Node_1_65_Node_1_66 [label="Skip\n__CPROVER_initialize();\nAssume\n(argc' \>= 0)\nINPUT(\argc\, argc');\n/* disable:bounds-check */\nargv'[(signed long int)argc'] = ((char *)NULL);\nreturn'=main(argc', argv');\nOUTPUT(\return'\, return');\nEnd of Function", shape=Mrecord, fontsize=22, color=red];
}

subgraph "cluster___CPROVER_initialize" {
label="__CPROVER_initialize";
Node_2_67_Node_2_68_Node_2_69_Node_2_70_Node_2_71_Node_2_72_Node_2_73 [label="Skip\n__CPROVER_dead_object = NULL;\n__CPROVER_deallocated = NULL;\n__CPROVER_max_malloc_size = 36028797018963968ul;\n__CPROVER_memory_leak = NULL;\n__CPROVER_rounding_mode = 0;\nEnd of Function", shape=Mrecord, fontsize=22, color=red];
}

subgraph "cluster_printf" {
rank=sink;
label="printf";
Node_3_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_0_6 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_14 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_25 -> Node_3_0 [lhead="cluster_printf", color=blue];
subgraph "cluster_atoi" {
rank=sink;
label="atoi";
Node_4_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_0_21 -> Node_4_0 [lhead="cluster_atoi", color=blue];
subgraph "cluster_fopen" {
rank=sink;
label="fopen";
Node_5_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_0_22 -> Node_4_0 [lhead="cluster_atoi", color=blue];
subgraph "cluster___isoc99_fscanf" {
rank=sink;
label="__isoc99_fscanf";
Node_6_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_0_16 -> Node_6_0 [lhead="cluster___isoc99_fscanf", color=blue];
Node_0_23 -> Node_4_0 [lhead="cluster_atoi", color=blue];
Node_0_17 -> Node_6_0 [lhead="cluster___isoc99_fscanf", color=blue];
Node_0_18 -> Node_6_0 [lhead="cluster___isoc99_fscanf", color=blue];
Node_0_35 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_40 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_38 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_44 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_49 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_0_47 -> Node_3_0 [lhead="cluster_printf", color=blue];
Node_3_0;
Node_0_6;
Node_0_14;
Node_0_25;
Node_0_21;
Node_4_0;
Node_0_22;
Node_0_16;
Node_6_0;
Node_0_23;
Node_0_17;
Node_0_18;
Node_0_35;
Node_0_40;
Node_0_38;
Node_0_44;
Node_0_49;
Node_0_47;
Node_1_64_Node_0_0 [label="None\nNone", shape=Mrecord, fontsize=22, color=red];
Node_1_64_Node_0_0 -> Node_3_0;
Node_0_15_Node_5_0 [label="None\nNone", shape=Mrecord, fontsize=22, color=red];
Node_1_60_Node_2_0 [label="None\nNone", shape=Mrecord, fontsize=22, color=red];
}
