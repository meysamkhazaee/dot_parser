digraph G {
color=black;
orientation=portrait;
fontsize=20;
compound=true;
size="30,40";
ratio=compress;
subgraph "cluster_main" {
label="main";
Node_0_0 [shape=Mrecord, fontsize=22, label="printf(\"Program name: %s\\n\", argv[(signed long int)0]);"];
Node_0_1 [shape=Mrecord, fontsize=22, label="FILE *fptr;"];
Node_0_1 -> Node_0_2;
Node_0_2 [shape=Mrecord, fontsize=22, label="signed int num1;"];
Node_0_2 -> Node_0_3;
Node_0_3 [shape=Mrecord, fontsize=22, label="signed int num2;"];
Node_0_3 -> Node_0_4;
Node_0_4 [shape=Mrecord, fontsize=22, label="signed int num3;"];
Node_0_4 -> Node_0_5;
Node_0_5 [shape=diamond, fontsize=22, label="!(argc \< 2)?"];
Node_0_5 -> Node_0_13 [fontsize=20, label="true"];
Node_0_5 -> Node_0_6 [fontsize=20, label="false"];
Node_0_13 [shape=diamond, fontsize=22, label="!(argc == 2)?"];
Node_0_13 -> Node_0_20 [fontsize=20, label="true"];
Node_0_13 -> Node_0_14 [fontsize=20, label="false"];
Node_0_6 [shape=Mrecord, fontsize=22, label="printf(\"Usage: %s .not input\\n\", argv[(signed long int)0]);"];
Node_0_20 [shape=diamond, fontsize=22, label="!(argc == 4)?"];
Node_0_20 -> Node_0_25 [fontsize=20, label="true"];
Node_0_20 -> Node_0_21 [fontsize=20, label="false"];
Node_0_14 [shape=Mrecord, fontsize=22, label="printf(\"Number of arguments: %d\\nRead From File\\n\", argc - 1);"];
Node_0_7 [shape=Mrecord, fontsize=22, label="return 1;"];
Node_0_7 -> Node_0_8;
Node_0_25 [shape=Mrecord, fontsize=22, label="printf(\"Invalid number of arguments. Please provide three numbers.\\n\");"];
Node_0_21 [shape=Mrecord, fontsize=22, label="num1=atoi(argv[(signed long int)1]);"];
Node_0_15 [shape=Mrecord, fontsize=22, label="fptr=fopen(argv[(signed long int)1], \"r\");"];
Node_0_8 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_8 -> Node_0_9;
Node_0_26 [shape=Mrecord, fontsize=22, label="return 1;"];
Node_0_26 -> Node_0_27;
Node_0_22 [shape=Mrecord, fontsize=22, label="num2=atoi(argv[(signed long int)2]);"];
Node_0_16 [shape=Mrecord, fontsize=22, label="__isoc99_fscanf(fptr, \"%d\", &num1);"];
Node_0_9 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_9 -> Node_0_10;
Node_0_27 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_27 -> Node_0_28;
Node_0_23 [shape=Mrecord, fontsize=22, label="num3=atoi(argv[(signed long int)3]);"];
Node_0_17 [shape=Mrecord, fontsize=22, label="__isoc99_fscanf(fptr, \"%d\", &num2);"];
Node_0_10 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_10 -> Node_0_11;
Node_0_28 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_28 -> Node_0_29;
Node_0_24 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_24 -> Node_0_32;
Node_0_18 [shape=Mrecord, fontsize=22, label="__isoc99_fscanf(fptr, \"%d\", &num3);"];
Node_0_11 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_11 -> Node_0_12;
Node_0_29 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_29 -> Node_0_30;
Node_0_32 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_32 -> Node_0_33;
Node_0_19 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_19 -> Node_0_33;
Node_0_12 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_12 -> Node_0_58;
Node_0_30 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_30 -> Node_0_31;
Node_0_33 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_33 -> Node_0_34;
Node_0_58 [shape=Mrecord, fontsize=22, label="End of Function"];
Node_0_31 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_31 -> Node_0_58;
Node_0_34 [shape=diamond, fontsize=22, label="!(num1 \> num2)?"];
Node_0_34 -> Node_0_37 [fontsize=20, label="true"];
Node_0_34 -> Node_0_35 [fontsize=20, label="false"];
Node_0_37 [shape=diamond, fontsize=22, label="!(num1 \< num2)?"];
Node_0_37 -> Node_0_40 [fontsize=20, label="true"];
Node_0_37 -> Node_0_38 [fontsize=20, label="false"];
Node_0_35 [shape=Mrecord, fontsize=22, label="printf(\"num1 = %d is greater than num2 = %d.\\n\", num1, num2);"];
Node_0_40 [shape=Mrecord, fontsize=22, label="printf(\"Both numbers are equal.\\n\");"];
Node_0_38 [shape=Mrecord, fontsize=22, label="printf(\"num1 = %d is less than num2 = %d.\\n\", num1, num2);"];
Node_0_36 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_36 -> Node_0_42;
Node_0_41 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_41 -> Node_0_42;
Node_0_39 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_39 -> Node_0_41;
Node_0_42 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_42 -> Node_0_43;
Node_0_43 [shape=diamond, fontsize=22, label="!(num3 \> 0)?"];
Node_0_43 -> Node_0_46 [fontsize=20, label="true"];
Node_0_43 -> Node_0_44 [fontsize=20, label="false"];
Node_0_46 [shape=diamond, fontsize=22, label="!(num3 \< 0)?"];
Node_0_46 -> Node_0_49 [fontsize=20, label="true"];
Node_0_46 -> Node_0_47 [fontsize=20, label="false"];
Node_0_44 [shape=Mrecord, fontsize=22, label="printf(\"%d is positive.\\n\", num3);"];
Node_0_49 [shape=Mrecord, fontsize=22, label="printf(\"%d is zero.\\n\", num3);"];
Node_0_47 [shape=Mrecord, fontsize=22, label="printf(\"%d is negative.\\n\", num3);"];
Node_0_45 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_45 -> Node_0_51;
Node_0_50 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_50 -> Node_0_51;
Node_0_48 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_48 -> Node_0_50;
Node_0_51 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_51 -> Node_0_52;
Node_0_52 [shape=Mrecord, fontsize=22, label="return 0;"];
Node_0_52 -> Node_0_53;
Node_0_53 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_53 -> Node_0_54;
Node_0_54 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_54 -> Node_0_55;
Node_0_55 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_55 -> Node_0_56;
Node_0_56 [shape=Mrecord, fontsize=22, label="Dead"];
Node_0_56 -> Node_0_57;
Node_0_57 [shape=Mrecord, fontsize=22, label="Goto"];
Node_0_57 -> Node_0_58;
}

subgraph "cluster___CPROVER__start" {
label="__CPROVER__start";
Node_1_59 [shape=Mrecord, fontsize=22, label="Skip"];
Node_1_59 -> Node_1_60;
Node_1_60 [shape=Mrecord, fontsize=22, label="__CPROVER_initialize();"];
Node_1_61 [shape=Mrecord, fontsize=22, label="Assume\n(argc' \>= 0)"];
Node_1_61 -> Node_1_62;
Node_1_62 [shape=Mrecord, fontsize=22, label="INPUT(\"argc\", argc');"];
Node_1_62 -> Node_1_63;
Node_1_63 [shape=Mrecord, fontsize=22, label="/* disable:bounds-check */\nargv'[(signed long int)argc'] = ((char *)NULL);"];
Node_1_63 -> Node_1_64;
Node_1_64 [shape=Mrecord, fontsize=22, label="return'=main(argc', argv');"];
Node_1_65 [shape=Mrecord, fontsize=22, label="OUTPUT(\"return'\", return');"];
Node_1_65 -> Node_1_66;
Node_1_66 [shape=Mrecord, fontsize=22, label="End of Function"];
}

subgraph "cluster___CPROVER_initialize" {
label="__CPROVER_initialize";
Node_2_67 [shape=Mrecord, fontsize=22, label="Skip"];
Node_2_67 -> Node_2_68;
Node_2_68 [shape=Mrecord, fontsize=22, label="__CPROVER_dead_object = NULL;"];
Node_2_68 -> Node_2_69;
Node_2_69 [shape=Mrecord, fontsize=22, label="__CPROVER_deallocated = NULL;"];
Node_2_69 -> Node_2_70;
Node_2_70 [shape=Mrecord, fontsize=22, label="__CPROVER_max_malloc_size = 36028797018963968ul;"];
Node_2_70 -> Node_2_71;
Node_2_71 [shape=Mrecord, fontsize=22, label="__CPROVER_memory_leak = NULL;"];
Node_2_71 -> Node_2_72;
Node_2_72 [shape=Mrecord, fontsize=22, label="__CPROVER_rounding_mode = 0;"];
Node_2_72 -> Node_2_73;
Node_2_73 [shape=Mrecord, fontsize=22, label="End of Function"];
}

subgraph "cluster_printf" {
rank=sink;
label="printf";
Node_3_0 [shape=Mrecord, fontsize=22, label="?"];
}

subgraph "cluster_atoi" {
rank=sink;
label="atoi";
Node_4_0 [shape=Mrecord, fontsize=22, label="?"];
}

subgraph "cluster_fopen" {
rank=sink;
label="fopen";
Node_5_0 [shape=Mrecord, fontsize=22, label="?"];
}

subgraph "cluster___isoc99_fscanf" {
rank=sink;
label="__isoc99_fscanf";
Node_6_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_3_0 -> Node_0_1 [color=blue];
Node_3_0 -> Node_0_7 [color=blue];
Node_3_0 -> Node_0_15 [color=blue];
Node_3_0 -> Node_0_26 [color=blue];
Node_4_0 -> Node_0_22 [color=blue];
Node_5_0 -> Node_0_16 [color=blue];
Node_4_0 -> Node_0_23 [color=blue];
Node_6_0 -> Node_0_17 [color=blue];
Node_4_0 -> Node_0_24 [color=blue];
Node_6_0 -> Node_0_18 [color=blue];
Node_6_0 -> Node_0_19 [color=blue];
Node_3_0 -> Node_0_36 [color=blue];
Node_3_0 -> Node_0_41 [color=blue];
Node_3_0 -> Node_0_39 [color=blue];
Node_3_0 -> Node_0_45 [color=blue];
Node_3_0 -> Node_0_50 [color=blue];
Node_3_0 -> Node_0_48 [color=blue];
Node_1_60 -> Node_2_67 [color=blue];
Node_2_73 -> Node_1_61 [color=blue];
Node_0_57 -> Node_1_65 [color=blue];
}
