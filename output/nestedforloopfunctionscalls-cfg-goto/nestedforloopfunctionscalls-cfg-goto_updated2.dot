digraph G {
color=black;
orientation=portrait;
fontsize=20;
compound=true;
size="30,40";
ratio=compress;
subgraph "cluster_main" {
label="main";
Node_0_20 [shape=Mrecord, fontsize=22, label="i = 0;"];
Node_0_20 -> Node_0_21;
Node_0_21 [shape=diamond, fontsize=22, label="!(i \< limit)?"];
Node_0_21 -> Node_0_22 [fontsize=20, label="false"];
Node_0_22 [shape=diamond, fontsize=22, label="!(x \< y)?"];
Node_0_36 [shape=diamond, fontsize=22, label="!(j \< limit2)?"];
Node_0_36 -> Node_0_43 [fontsize=20, label="true"];
Node_0_25 [shape=diamond, fontsize=22, label="!(k \< limit1)?"];
Node_0_43 [shape=Mrecord, fontsize=22, label="Skip"];
Node_0_0_Node_0_1_Node_0_2_Node_0_3_Node_0_4_Node_0_5_Node_0_6_Node_0_7_Node_0_8_Node_0_9_Node_0_10 [label="signed int x;\nx = 10;\nsigned int y;\ny = 12;\nsigned int limit;\nlimit = x + y;\nsigned int limit1;\nlimit1 = x + y * 3;\nsigned int limit2;\nsigned int return_value_rand;\nreturn_value_rand=rand();", shape=plaintext, fontsize=22, color=red];
Node_0_11_Node_0_12_Node_0_13_Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19 [label="limit2 = return_value_rand % 10;\nsigned int p;\np = 0;\nsigned int q;\nq = 10;\nsigned int i;\nsigned int j;\nsigned int k;\np=func3(y);", shape=plaintext, fontsize=22, color=red];
Node_0_34_Node_0_35 [label="y = y + 1;\nj = 0;", shape=plaintext, fontsize=22, color=red];
Node_0_23_Node_0_24 [label="x = x + 1;\nk = 0;", shape=plaintext, fontsize=22, color=red];
Node_0_37_Node_0_38 [label="signed int return_value_func1$0;\nreturn_value_func1$0=func1(p);", shape=plaintext, fontsize=22, color=red];
Node_0_32_Node_0_33 [label="Skip\nGoto", shape=plaintext, fontsize=22, color=red];
Node_0_26_Node_0_27 [label="signed int return_value_func1;\nreturn_value_func1=func1(q);", shape=plaintext, fontsize=22, color=red];
Node_0_44_Node_0_45_Node_0_46 [label="Skip\ni = i + 1;\nGoto", shape=plaintext, fontsize=22, color=red];
Node_0_39_Node_0_40_Node_0_41_Node_0_42 [label="p = p + return_value_func1$0;\nDead\nj = j + 1;\nGoto", shape=plaintext, fontsize=22, color=red];
Node_0_28_Node_0_29_Node_0_30_Node_0_31 [label="q = q + return_value_func1;\nDead\nk = k + 1;\nGoto", shape=plaintext, fontsize=22, color=red];
Node_0_47_Node_0_48_Node_0_49_Node_0_50_Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57_Node_0_58_Node_0_59_Node_0_60_Node_0_61 [label="Skip\nreturn p + q;\nDead\nDead\nDead\nDead\nDead\nDead\nDead\nDead\nDead\nDead\nDead\nGoto\nEnd of Function", shape=plaintext, fontsize=22, color=red];
}

subgraph "cluster_func2" {
label="func2";
Node_1_67 [shape=Mrecord, fontsize=22, label="z2 = 3;"];
Node_1_65 [shape=Mrecord, fontsize=22, label="z2=func1(x2);"];
Node_1_66 [shape=Mrecord, fontsize=22, label="Goto"];
Node_1_62_Node_1_63_Node_1_64 [label="signed int z2;\nz2 = x2 * 2;\n!(z2 \< 3)?", shape=plaintext, fontsize=22, color=red];
Node_1_68_Node_1_69_Node_1_70 [label="Skip\nsigned int return_value_func1;\nreturn_value_func1=func1(z2);", shape=plaintext, fontsize=22, color=red];
Node_1_71_Node_1_72_Node_1_73_Node_1_74_Node_1_75 [label="return return_value_func1;\nDead\nDead\nGoto\nEnd of Function", shape=plaintext, fontsize=22, color=red];
}

subgraph "cluster_func1" {
label="func1";
Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82 [label="signed int y1;\ny1 = x1 + 3;\ny1 = y1 + 1;\nreturn y1;\nDead\nGoto\nEnd of Function", shape=plaintext, fontsize=22, color=red];
}

subgraph "cluster_func3" {
label="func3";
Node_3_88 [shape=Mrecord, fontsize=22, label="t3 = 3;"];
Node_3_86 [shape=Mrecord, fontsize=22, label="t3=func2(t3);"];
Node_3_87 [shape=Mrecord, fontsize=22, label="Goto"];
Node_3_83_Node_3_84_Node_3_85 [label="signed int t3;\nt3 = x3 / 2;\n!(t3 \< 5)?", shape=plaintext, fontsize=22, color=red];
Node_3_89_Node_3_90_Node_3_91_Node_3_92_Node_3_93 [label="Skip\nreturn t3;\nDead\nGoto\nEnd of Function", shape=plaintext, fontsize=22, color=red];
}

subgraph "cluster_rand" {
rank=sink;
label="rand";
Node_4_0 [shape=Mrecord, fontsize=22, label="?"];
}

Node_4_0 -> Node_0_11_Node_0_12_Node_0_13_Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19;
Node_0_34_Node_0_35 -> Node_0_36;
Node_0_22 -> Node_0_34_Node_0_35;
Node_0_23_Node_0_24 -> Node_0_25;
Node_0_22 -> Node_0_23_Node_0_24;
Node_0_36 -> Node_0_37_Node_0_38;
Node_0_25 -> Node_0_32_Node_0_33;
Node_0_25 -> Node_0_26_Node_0_27;
Node_0_44_Node_0_45_Node_0_46 -> Node_0_21;
Node_0_32_Node_0_33 -> Node_0_44_Node_0_45_Node_0_46;
Node_0_43 -> Node_0_44_Node_0_45_Node_0_46;
Node_0_39_Node_0_40_Node_0_41_Node_0_42 -> Node_0_36;
Node_0_28_Node_0_29_Node_0_30_Node_0_31 -> Node_0_25;
Node_0_21 -> Node_0_47_Node_0_48_Node_0_49_Node_0_50_Node_0_51_Node_0_52_Node_0_53_Node_0_54_Node_0_55_Node_0_56_Node_0_57_Node_0_58_Node_0_59_Node_0_60_Node_0_61;
Node_1_62_Node_1_63_Node_1_64 -> Node_1_67;
Node_1_62_Node_1_63_Node_1_64 -> Node_1_65;
Node_3_86 -> Node_1_62_Node_1_63_Node_1_64;
Node_1_67 -> Node_1_68_Node_1_69_Node_1_70;
Node_1_66 -> Node_1_68_Node_1_69_Node_1_70;
Node_1_71_Node_1_72_Node_1_73_Node_1_74_Node_1_75 -> Node_3_87;
Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82 -> Node_1_66;
Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82 -> Node_0_39_Node_0_40_Node_0_41_Node_0_42;
Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82 -> Node_0_28_Node_0_29_Node_0_30_Node_0_31;
Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82 -> Node_1_71_Node_1_72_Node_1_73_Node_1_74_Node_1_75;
Node_1_65 -> Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82;
Node_0_37_Node_0_38 -> Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82;
Node_0_26_Node_0_27 -> Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82;
Node_1_68_Node_1_69_Node_1_70 -> Node_2_76_Node_2_77_Node_2_78_Node_2_79_Node_2_80_Node_2_81_Node_2_82;
Node_3_83_Node_3_84_Node_3_85 -> Node_3_88;
Node_3_83_Node_3_84_Node_3_85 -> Node_3_86;
Node_0_11_Node_0_12_Node_0_13_Node_0_14_Node_0_15_Node_0_16_Node_0_17_Node_0_18_Node_0_19 -> Node_3_83_Node_3_84_Node_3_85;
Node_3_89_Node_3_90_Node_3_91_Node_3_92_Node_3_93 -> Node_0_20;
Node_3_88 -> Node_3_89_Node_3_90_Node_3_91_Node_3_92_Node_3_93;
Node_3_87 -> Node_3_89_Node_3_90_Node_3_91_Node_3_92_Node_3_93;
}
